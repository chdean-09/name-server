// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(cuid())
  email          String           @unique
  passwordHash   String
  devices        Device[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  PairingSession PairingSession[]
}

model Device {
  id             String           @id @default(cuid())
  name           String
  macAddress     String           @unique // Bluetooth MAC or some UUID
  wifiSSID       String?
  ownerId        String
  owner          User             @relation(fields: [ownerId], references: [id])
  isClaimed      Boolean          @default(false)
  lastCommand    CommandType
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  PairingSession PairingSession[]
}

enum CommandType {
  LOCK
  UNLOCK
}

enum CommandStatus {
  PENDING
  SENT
  EXECUTED
  FAILED
}

model PairingSession {
  id          String    @id @default(cuid())
  deviceId    String
  device      Device    @relation(fields: [deviceId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  isComplete  Boolean   @default(false)
  startedAt   DateTime  @default(now())
  completedAt DateTime?
}
